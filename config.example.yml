# 这是一个示例配置文件，你可以根据自己的需求进行修改保存为config.yml
common: # 通用配置
  join_interval: 3  # 加入服务器的间隔，单位秒，防止微软验证失败

servers: # 服务器列表
  server1: # 服务器名称，对应GroupID，v11下为数字，v12下为字符串
    address: "mc.example.top" # 服务器地址
    reconnect_interval: 5  # 重连间隔，单位秒，0为不重连，建议大一点不然被反作弊封号
    auth: "auth_example_online"  # 服务器的认证信息
    message_templates:  # 消息模板，用于解析消息，不设置无法接收到玩家消息，从上至下顺序
      - "^<(?P<type>.+?)> (?P<player>.+?) (?P<message>.+)$" # 匹配`<类型> 玩家名 正文`样式的消息，这个是为了支持私聊消息
      - "^\\[(?P<title>.+?)\\] <(?P<player>.+?)> (?P<message>.+)$"  # 匹配`[头衔] <玩家名> 正文`样式的消息
      - "^<(?P<username>.+?)> (?P<message>.+)$" # 匹配`<用户名> 正文`样式的消息(原版默认样式)
      - "^\\[(?P<title>.+?)\\](?P<player>.+?)  (?P<message>.+)$" # 匹配`[头衔]玩家名  正文`样式的消息
      # 你可以根据需要添加更多的消息模板，以此来适配FairyChat的消息格式
    private_prefix: ["私信", "私聊", "悄悄话", "私"]  # 私聊前缀，用于识别私聊消息(仅装载FairyChat有效)
    rcon:
        address: "rcon.example.top:25575"  # RCON地址
        password: "your_password"  # RCON密码

  server2:
    address: "server.top"
    reconnect_interval: 5
    auth: "auth_example_offline"
    #...

auth: # 自定义认证信息
  auth_example_online: # 服务器的认证信息
    online: true  # 在线模式下使用交互式登录
    name:   # 在线模式下不生效

  auth_example_offline:
    online: false
    name: "Bot"

onebot: # OneBot配置
  reverse_websocket: # 反向Websocket配置(作客户端)
    - address: "ws://127.0.0.1:8080/onebot/v12"
      reconnect_interval: 5  # 重连间隔，单位秒，0为不重连
      access_token:  # 反向Websocket的访问令牌(可选，下同)
      protocol_version: 12  # OneBot协议版本，v11或v12(可选，下同，默认12)
  websocket: # 正向Websocket配置(作服务端)
    - host: "127.0.0.1"
      port: 8080
      access_token:
      protocol_version: 12
  http_webhook: # HTTP Webhook(作客户端)
    - address:
      access_token:
      protocol_version: 12
  http: # HTTP(作服务端)
    - host: "127.0.0.1"
      port: 8080
      access_token:
      protocol_version: 12

  bot:
    heartbeat_interval: 20  # 心跳间隔，单位秒
    self_id: 114514  # 机器人的ID，v11下需使用数字形式，v12下使用字符串形式，要兼容的话请使用字符串数字形式
    player_id_type: "uuid_int"  # 为兼容onebotv11，用户的ID传输模式，uuid_int为UUID的整数形式(在某些语言下可能无法处理较大的整数，例如Javascript)，primary_key为使用数据库自增主键作为id(自动映射，但是在不同的bot上该值也不同)